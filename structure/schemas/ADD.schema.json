{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://forge-sdd-toolkit.dev/schemas/ADD.schema.json",
  "title": "Architecture Decision Document (ADD)",
  "description": "Schema for validating Architecture Decision Documents generated by forge-architect",
  "type": "object",
  "required": [
    "metadata",
    "executiveSummary",
    "architecturalDrivers",
    "moduleSelection",
    "uiFrameworkDecision",
    "dataArchitecture",
    "performanceArchitecture",
    "securityArchitecture"
  ],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["project", "created", "author", "basedOn", "status"],
      "properties": {
        "project": {
          "type": "string",
          "description": "App/Project name"
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "author": {
          "type": "string",
          "description": "Architect name"
        },
        "basedOn": {
          "type": "string",
          "description": "Specification document filename",
          "pattern": "^specification-.+\\.md$"
        },
        "status": {
          "type": "string",
          "enum": ["Draft", "Under Review", "Approved"]
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$"
        }
      }
    },
    "executiveSummary": {
      "type": "object",
      "required": ["keyDecisions", "confidenceLevel"],
      "properties": {
        "keyDecisions": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["category", "decision", "rationale"],
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "Forge Module",
                  "UI Framework",
                  "Storage Strategy",
                  "External APIs",
                  "Security",
                  "Performance"
                ]
              },
              "decision": {
                "type": "string"
              },
              "rationale": {
                "type": "string"
              }
            }
          }
        },
        "confidenceLevel": {
          "type": "string",
          "enum": ["High", "Medium", "Low"]
        }
      }
    },
    "architecturalDrivers": {
      "type": "object",
      "required": ["requirementsExtraction", "forgeConstraints"],
      "properties": {
        "requirementsExtraction": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["requirementId", "type", "architecturalImpact"],
            "properties": {
              "requirementId": {
                "type": "string",
                "pattern": "^REQ-(F|NFR)-\\d{3}$"
              },
              "type": {
                "type": "string",
                "enum": ["Functional", "Non-Functional"]
              },
              "architecturalImpact": {
                "type": "string"
              }
            }
          }
        },
        "architecturalConcerns": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["concern", "description"],
            "properties": {
              "concern": {
                "type": "string",
                "enum": [
                  "Performance",
                  "Scalability",
                  "Reliability",
                  "Security",
                  "Maintainability"
                ]
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "forgeConstraints": {
          "type": "object",
          "required": ["acknowledged"],
          "properties": {
            "acknowledged": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "25-second function timeout",
                  "250KB per storage entity",
                  "5GB total storage limit",
                  "Node.js sandbox environment",
                  "Rate limits on Forge APIs",
                  "Cold start latency"
                ]
              }
            }
          }
        }
      }
    },
    "moduleSelection": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["decisionId", "selectedModule", "tracesTo", "rationale", "confidence"],
        "properties": {
          "decisionId": {
            "type": "string",
            "pattern": "^ADD-MODULE-\\d{3}$",
            "description": "Decision ID (e.g., ADD-MODULE-001)"
          },
          "selectedModule": {
            "type": "string",
            "description": "Forge module (e.g., jira:issuePanel)"
          },
          "tracesTo": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^REQ-(F|NFR)-\\d{3}$"
            },
            "description": "Requirements this decision addresses"
          },
          "analysis": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["option", "pros", "cons", "score"],
              "properties": {
                "option": {
                  "type": "string"
                },
                "pros": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cons": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10
                }
              }
            }
          },
          "rationale": {
            "type": "string",
            "minLength": 20
          },
          "tradeoffs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alternativesConsidered": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["alternative", "rejectedBecause"],
              "properties": {
                "alternative": {
                  "type": "string"
                },
                "rejectedBecause": {
                  "type": "string"
                }
              }
            }
          },
          "confidence": {
            "type": "string",
            "enum": ["High", "Medium", "Low"]
          }
        }
      }
    },
    "uiFrameworkDecision": {
      "type": "object",
      "required": ["decisionId", "selected", "tracesTo", "rationale", "confidence"],
      "properties": {
        "decisionId": {
          "type": "string",
          "pattern": "^ADD-UI-\\d{3}$"
        },
        "selected": {
          "type": "string",
          "enum": ["UI Kit", "Custom UI", "Hybrid"]
        },
        "tracesTo": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^REQ-(F|NFR)-\\d{3}$"
          }
        },
        "decisionMatrix": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["criterion", "weight", "uiKitScore", "customUIScore"],
            "properties": {
              "criterion": {
                "type": "string"
              },
              "weight": {
                "type": "string",
                "pattern": "^\\d+%$"
              },
              "uiKitScore": {
                "type": "number",
                "minimum": 0,
                "maximum": 10
              },
              "customUIScore": {
                "type": "number",
                "minimum": 0,
                "maximum": 10
              }
            }
          }
        },
        "rationale": {
          "type": "string",
          "minLength": 20
        },
        "implementationDetails": {
          "type": "object",
          "properties": {
            "framework": {
              "type": "string"
            },
            "stateManagement": {
              "type": "string"
            },
            "styling": {
              "type": "string"
            },
            "bundleSizeTarget": {
              "type": "string"
            }
          }
        },
        "tradeoffs": {
          "type": "object",
          "properties": {
            "benefits": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "limitations": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "acceptable": {
              "type": "string"
            }
          }
        },
        "confidence": {
          "type": "string",
          "enum": ["High", "Medium", "Low"]
        }
      }
    },
    "dataArchitecture": {
      "type": "object",
      "required": ["storageStrategy", "cachingStrategy"],
      "properties": {
        "storageStrategy": {
          "type": "object",
          "required": ["decisionId", "solution", "tracesTo"],
          "properties": {
            "decisionId": {
              "type": "string",
              "pattern": "^ADD-DATA-\\d{3}$"
            },
            "solution": {
              "type": "string",
              "enum": [
                "Forge Storage",
                "Entity Properties",
                "External DB",
                "Hybrid"
              ]
            },
            "tracesTo": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^REQ-(F|NFR)-\\d{3}$"
              }
            },
            "dataModel": {
              "type": "string",
              "description": "TypeScript interface or description"
            },
            "capacityPlanning": {
              "type": "object",
              "properties": {
                "currentEstimate": {
                  "type": "string"
                },
                "oneYearProjection": {
                  "type": "string"
                },
                "withinLimits": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "cachingStrategy": {
          "type": "object",
          "required": ["decisionId", "ttl", "invalidation"],
          "properties": {
            "decisionId": {
              "type": "string",
              "pattern": "^ADD-DATA-\\d{3}$"
            },
            "ttl": {
              "type": "number",
              "description": "Time-to-live in seconds"
            },
            "invalidation": {
              "type": "string",
              "enum": ["Time-based", "Event-based", "Manual", "Hybrid"]
            },
            "fallback": {
              "type": "string"
            },
            "hitTarget": {
              "type": "string",
              "pattern": "^>?\\d+%$"
            }
          }
        }
      }
    },
    "apiIntegration": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["decisionId", "apiName", "tracesTo", "integrationPattern"],
        "properties": {
          "decisionId": {
            "type": "string",
            "pattern": "^ADD-API-\\d{3}$"
          },
          "apiName": {
            "type": "string"
          },
          "tracesTo": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^REQ-(F|NFR)-\\d{3}$"
            }
          },
          "integrationPattern": {
            "type": "string",
            "enum": ["Direct", "Async", "Webhook", "Polling"]
          },
          "authentication": {
            "type": "object",
            "required": ["method", "storage"],
            "properties": {
              "method": {
                "type": "string",
                "enum": ["OAuth 2.0", "API Token", "Basic Auth", "Other"]
              },
              "storage": {
                "type": "string"
              }
            }
          },
          "rateLimiting": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "string"
              },
              "strategy": {
                "type": "string"
              },
              "fallback": {
                "type": "string"
              }
            }
          },
          "errorHandling": {
            "type": "object",
            "properties": {
              "timeout": {
                "type": "string"
              },
              "retry": {
                "type": "string"
              },
              "fallback": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "performanceArchitecture": {
      "type": "object",
      "required": ["performanceStrategy", "timeoutHandling"],
      "properties": {
        "performanceStrategy": {
          "type": "object",
          "required": ["decisionId", "tracesTo", "performanceBudget"],
          "properties": {
            "decisionId": {
              "type": "string",
              "pattern": "^ADD-PERF-\\d{3}$"
            },
            "tracesTo": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^REQ-NFR-\\d{3}$"
              }
            },
            "performanceBudget": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["component", "target", "strategy"],
                "properties": {
                  "component": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "strategy": {
                    "type": "string"
                  }
                }
              }
            },
            "optimizationTechniques": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "timeoutHandling": {
          "type": "object",
          "required": ["strategy", "longestOperation", "safetyMargin"],
          "properties": {
            "strategy": {
              "type": "string"
            },
            "longestOperation": {
              "type": "string"
            },
            "safetyMargin": {
              "type": "string"
            }
          }
        }
      }
    },
    "securityArchitecture": {
      "type": "object",
      "required": ["securityModel", "scopeMinimization"],
      "properties": {
        "securityModel": {
          "type": "object",
          "required": ["decisionId", "tracesTo"],
          "properties": {
            "decisionId": {
              "type": "string",
              "pattern": "^ADD-SEC-\\d{3}$"
            },
            "tracesTo": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^REQ-NFR-\\d{3}$"
              }
            },
            "authentication": {
              "type": "string"
            },
            "authorization": {
              "type": "string"
            },
            "dataProtection": {
              "type": "object",
              "properties": {
                "inTransit": {
                  "type": "string"
                },
                "atRest": {
                  "type": "string"
                },
                "apiTokens": {
                  "type": "string"
                }
              }
            }
          }
        },
        "scopeMinimization": {
          "type": "object",
          "required": ["decisionId", "scopesRequested", "scopesNotRequested"],
          "properties": {
            "decisionId": {
              "type": "string",
              "pattern": "^ADD-SEC-\\d{3}$"
            },
            "scopesRequested": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "required": ["scope", "justification"],
                "properties": {
                  "scope": {
                    "type": "string"
                  },
                  "justification": {
                    "type": "string"
                  }
                }
              }
            },
            "scopesNotRequested": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["scope", "reason"],
                "properties": {
                  "scope": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "technologyStack": {
      "type": "object",
      "required": ["runtime", "language"],
      "properties": {
        "runtime": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "uiFramework": {
          "type": "string"
        },
        "buildTools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testing": {
          "type": "object",
          "properties": {
            "unit": {
              "type": "string"
            },
            "integration": {
              "type": "string"
            },
            "e2e": {
              "type": "string"
            }
          }
        }
      }
    },
    "assumptions": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["assumption", "validation"],
        "properties": {
          "assumption": {
            "type": "string"
          },
          "validation": {
            "type": "string"
          }
        }
      }
    },
    "risks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["risk", "mitigation", "confidence"],
        "properties": {
          "risk": {
            "type": "string"
          },
          "mitigation": {
            "type": "string"
          },
          "confidence": {
            "type": "string",
            "enum": ["High", "Medium", "Low"]
          }
        }
      }
    }
  }
}
