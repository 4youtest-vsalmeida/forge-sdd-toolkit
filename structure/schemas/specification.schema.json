{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://forge-sdd-toolkit.dev/schemas/specification.schema.json",
  "title": "Forge App Specification Document",
  "description": "Schema for validating Specification Documents generated by forge-ideate",
  "type": "object",
  "required": [
    "metadata",
    "executiveSummary",
    "context",
    "userStories",
    "functionalRequirements",
    "nonFunctionalRequirements",
    "successMetrics"
  ],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["appName", "created", "author", "status", "version"],
      "properties": {
        "appName": {
          "type": "string",
          "description": "Name of the Forge app",
          "minLength": 3,
          "maxLength": 100
        },
        "created": {
          "type": "string",
          "format": "date",
          "description": "Creation date (YYYY-MM-DD)"
        },
        "author": {
          "type": "string",
          "description": "Author of the specification"
        },
        "status": {
          "type": "string",
          "enum": ["Draft", "Under Review", "Approved"],
          "description": "Current status of the specification"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$",
          "description": "Version number (e.g., 1.0)"
        }
      }
    },
    "executiveSummary": {
      "type": "object",
      "required": ["oneSentence", "problemStatement", "targetUsers", "successCriteria"],
      "properties": {
        "oneSentence": {
          "type": "string",
          "description": "One-sentence description of the app",
          "minLength": 10,
          "maxLength": 200
        },
        "problemStatement": {
          "type": "string",
          "description": "What problem does this solve?",
          "minLength": 20
        },
        "targetUsers": {
          "type": "string",
          "description": "Who will use this app?"
        },
        "successCriteria": {
          "type": "string",
          "description": "How will we measure success?"
        }
      }
    },
    "context": {
      "type": "object",
      "required": ["currentSituation", "impact"],
      "properties": {
        "currentSituation": {
          "type": "object",
          "required": ["painPoints"],
          "properties": {
            "description": {
              "type": "string",
              "description": "Current state without this app"
            },
            "painPoints": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              },
              "description": "Current pain points"
            },
            "manualProcesses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "What users do today manually"
            }
          }
        },
        "impact": {
          "type": "object",
          "required": ["ifNotSolved", "ifSolved"],
          "properties": {
            "ifNotSolved": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Negative consequences if not solved"
            },
            "ifSolved": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Positive outcomes if solved"
            }
          }
        }
      }
    },
    "userStories": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "asA", "iWant", "soThat", "acceptanceCriteria", "priority"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^STORY-\\d+\\.\\d+$",
            "description": "Story ID (e.g., STORY-1.1)"
          },
          "title": {
            "type": "string",
            "description": "Story title"
          },
          "asA": {
            "type": "string",
            "description": "User role"
          },
          "iWant": {
            "type": "string",
            "description": "Desired functionality"
          },
          "soThat": {
            "type": "string",
            "description": "Business value"
          },
          "acceptanceCriteria": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["id", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^AC-\\d+\\.\\d+\\.\\d+$",
                  "description": "AC ID (e.g., AC-1.1.1)"
                },
                "description": {
                  "type": "string",
                  "description": "Testable criterion"
                }
              }
            }
          },
          "priority": {
            "type": "string",
            "enum": ["P0", "P1", "P2"],
            "description": "Priority level"
          }
        }
      }
    },
    "functionalRequirements": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "title", "description", "acceptanceCriteria", "priority"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^REQ-F-\\d{3}$",
            "description": "Requirement ID (e.g., REQ-F-001)"
          },
          "title": {
            "type": "string",
            "description": "Requirement title"
          },
          "description": {
            "type": "string",
            "description": "What the app must do"
          },
          "userStories": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^STORY-\\d+\\.\\d+$"
            },
            "description": "Related user stories"
          },
          "acceptanceCriteria": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["id", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^AC-\\d{3}\\.\\d+$"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          "priority": {
            "type": "string",
            "enum": ["P0", "P1", "P2"]
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^REQ-(F|NFR)-\\d{3}$"
            }
          }
        }
      }
    },
    "nonFunctionalRequirements": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "category", "target", "rationale", "priority"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^REQ-NFR-\\d{3}$",
            "description": "NFR ID (e.g., REQ-NFR-001)"
          },
          "category": {
            "type": "string",
            "enum": [
              "Performance",
              "Scalability",
              "Availability",
              "Security",
              "Usability",
              "Maintainability",
              "Reliability"
            ],
            "description": "NFR category"
          },
          "target": {
            "type": "string",
            "description": "Measurable target (e.g., '< 2s load time')"
          },
          "rationale": {
            "type": "string",
            "description": "Why this matters"
          },
          "measurement": {
            "type": "string",
            "description": "How to measure"
          },
          "priority": {
            "type": "string",
            "enum": ["P0", "P1", "P2"]
          }
        }
      }
    },
    "integrationRequirements": {
      "type": "object",
      "properties": {
        "atlassianProducts": {
          "type": "object",
          "required": ["primary"],
          "properties": {
            "primary": {
              "type": "string",
              "enum": ["Jira", "Confluence", "Bitbucket", "JSM", "Compass", "Rovo"],
              "description": "Primary Atlassian product"
            },
            "integrationPoints": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "externalSystems": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "purpose", "authentication"],
            "properties": {
              "name": {
                "type": "string",
                "description": "External system name"
              },
              "purpose": {
                "type": "string",
                "description": "Why integrate"
              },
              "authentication": {
                "type": "string",
                "enum": ["OAuth", "API Token", "Basic Auth", "Other"]
              },
              "rateLimits": {
                "type": "string",
                "description": "Known rate limits"
              },
              "fallbackStrategy": {
                "type": "string",
                "description": "What to do if unavailable"
              }
            }
          }
        }
      }
    },
    "successMetrics": {
      "type": "object",
      "required": ["adoption", "performance", "business"],
      "properties": {
        "adoption": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["metric", "target", "timeline"],
            "properties": {
              "metric": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "timeline": {
                "type": "string"
              }
            }
          }
        },
        "performance": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["metric", "target", "measurement"],
            "properties": {
              "metric": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "measurement": {
                "type": "string"
              }
            }
          }
        },
        "business": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["metric", "target", "measurement"],
            "properties": {
              "metric": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "measurement": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "outOfScope": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["feature", "reason"],
        "properties": {
          "feature": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "description": "Features explicitly NOT included in v1"
    },
    "risks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["description", "likelihood", "impact", "mitigation"],
        "properties": {
          "description": {
            "type": "string"
          },
          "likelihood": {
            "type": "string",
            "enum": ["High", "Medium", "Low"]
          },
          "impact": {
            "type": "string",
            "enum": ["High", "Medium", "Low"]
          },
          "mitigation": {
            "type": "string"
          }
        }
      }
    }
  }
}
