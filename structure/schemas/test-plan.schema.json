{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://forge-sdd-toolkit.dev/schemas/test-plan.schema.json",
  "title": "Test Plan",
  "description": "Schema for validating Test Plans generated by forge-test",
  "type": "object",
  "required": [
    "metadata",
    "testStrategy",
    "coverageMatrix",
    "unitTests",
    "integrationTests",
    "e2eTests",
    "performanceTests",
    "securityTests",
    "testExecutionSchedule",
    "metrics"
  ],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["project", "created", "author", "basedOn", "status"],
      "properties": {
        "project": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "author": {
          "type": "string"
        },
        "basedOn": {
          "type": "object",
          "required": ["specification", "architecture", "implementationPlan"],
          "properties": {
            "specification": {
              "type": "string",
              "pattern": "^specification-.+\\.md$"
            },
            "architecture": {
              "type": "string",
              "pattern": "^ADD-.+\\.md$"
            },
            "implementationPlan": {
              "type": "string",
              "pattern": "^implementation-plan-.+\\.md$"
            },
            "codebase": {
              "type": "string",
              "description": "Repository path or branch"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": ["Draft", "Under Review", "Approved", "In Progress", "Complete"]
        }
      }
    },
    "testStrategy": {
      "type": "object",
      "required": ["overview", "pyramid", "approach", "tools"],
      "properties": {
        "overview": {
          "type": "string",
          "description": "High-level testing approach"
        },
        "pyramid": {
          "type": "object",
          "required": ["unit", "integration", "e2e"],
          "properties": {
            "unit": {
              "type": "object",
              "required": ["percentage", "target"],
              "properties": {
                "percentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "target": {
                  "type": "string",
                  "description": "e.g., '60% of total tests'"
                }
              }
            },
            "integration": {
              "type": "object",
              "required": ["percentage", "target"],
              "properties": {
                "percentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "target": {
                  "type": "string"
                }
              }
            },
            "e2e": {
              "type": "object",
              "required": ["percentage", "target"],
              "properties": {
                "percentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "target": {
                  "type": "string"
                }
              }
            }
          }
        },
        "approach": {
          "type": "object",
          "properties": {
            "tdd": {
              "type": "boolean",
              "description": "Test-Driven Development"
            },
            "bdd": {
              "type": "boolean",
              "description": "Behavior-Driven Development"
            },
            "continuous": {
              "type": "boolean",
              "description": "Continuous Testing in CI/CD"
            }
          }
        },
        "tools": {
          "type": "object",
          "required": ["unitTest", "e2eTest"],
          "properties": {
            "unitTest": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "e.g., ['Jest', '@forge/cli']"
            },
            "e2eTest": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "e.g., ['Playwright', 'Selenium']"
            },
            "mocking": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "coverage": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "coverageMatrix": {
      "type": "object",
      "required": ["requirements"],
      "properties": {
        "requirements": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["requirementId", "tests", "coverageStatus"],
            "properties": {
              "requirementId": {
                "type": "string",
                "pattern": "^REQ-(F|NFR)-\\d{3}$"
              },
              "description": {
                "type": "string"
              },
              "tests": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^TEST-(U|I|E2E|PERF|SEC)-\\d{3}$"
                }
              },
              "coverageStatus": {
                "type": "string",
                "enum": ["Fully Covered", "Partially Covered", "Not Covered"]
              }
            }
          }
        }
      }
    },
    "unitTests": {
      "type": "object",
      "required": ["overview", "targetCoverage", "testSuites"],
      "properties": {
        "overview": {
          "type": "string"
        },
        "targetCoverage": {
          "type": "object",
          "required": ["lines", "functions", "branches"],
          "properties": {
            "lines": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "functions": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "branches": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "statements": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "testSuites": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "scope", "tests"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^SUITE-U-\\d{3}$"
              },
              "name": {
                "type": "string"
              },
              "scope": {
                "type": "object",
                "required": ["files"],
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "functions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "tests": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["id", "name", "objective"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^TEST-U-\\d{3}$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "objective": {
                      "type": "string"
                    },
                    "tracesTo": {
                      "type": "object",
                      "properties": {
                        "requirement": {
                          "type": "string",
                          "pattern": "^REQ-(F|NFR)-\\d{3}$"
                        },
                        "task": {
                          "type": "string",
                          "pattern": "^TASK-\\d+\\.\\d+\\.\\d+$"
                        },
                        "acceptanceCriterion": {
                          "type": "string",
                          "pattern": "^AC-\\d+\\.\\d+\\.\\d+$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "integrationTests": {
      "type": "object",
      "required": ["overview", "testSuites"],
      "properties": {
        "overview": {
          "type": "string"
        },
        "testSuites": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "scope", "tests"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^SUITE-I-\\d{3}$"
              },
              "name": {
                "type": "string"
              },
              "scope": {
                "type": "object",
                "required": ["integration"],
                "properties": {
                  "integration": {
                    "type": "string",
                    "description": "What components/APIs are being integrated"
                  }
                }
              },
              "tests": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["id", "name", "objective"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^TEST-I-\\d{3}$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "objective": {
                      "type": "string"
                    },
                    "tracesTo": {
                      "type": "object",
                      "properties": {
                        "requirement": {
                          "type": "string",
                          "pattern": "^REQ-(F|NFR)-\\d{3}$"
                        },
                        "story": {
                          "type": "string",
                          "pattern": "^STORY-\\d+\\.\\d+$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "e2eTests": {
      "type": "object",
      "required": ["overview", "testSuites"],
      "properties": {
        "overview": {
          "type": "string"
        },
        "testSuites": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "scope", "tests"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^SUITE-E2E-\\d{3}$"
              },
              "name": {
                "type": "string"
              },
              "scope": {
                "type": "object",
                "required": ["userJourney"],
                "properties": {
                  "userJourney": {
                    "type": "string",
                    "description": "User flow being tested"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["Jira", "Confluence", "Bitbucket", "Compass", "JSM", "Rovo"]
                    }
                  }
                }
              },
              "tests": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["id", "name", "objective"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^TEST-E2E-\\d{3}$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "objective": {
                      "type": "string"
                    },
                    "tracesTo": {
                      "type": "object",
                      "properties": {
                        "requirement": {
                          "type": "string",
                          "pattern": "^REQ-(F|NFR)-\\d{3}$"
                        },
                        "story": {
                          "type": "string",
                          "pattern": "^STORY-\\d+\\.\\d+$"
                        },
                        "epic": {
                          "type": "string",
                          "pattern": "^EPIC-\\d+$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "performanceTests": {
      "type": "object",
      "required": ["overview", "tests"],
      "properties": {
        "overview": {
          "type": "string"
        },
        "tests": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "metric", "target"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^TEST-PERF-\\d{3}$"
              },
              "name": {
                "type": "string"
              },
              "metric": {
                "type": "string",
                "enum": [
                  "Response Time",
                  "Throughput",
                  "Memory Usage",
                  "CPU Usage",
                  "Cold Start Time",
                  "Storage Operations"
                ]
              },
              "target": {
                "type": "object",
                "required": ["value", "threshold"],
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "e.g., '<2s', '<500MB'"
                  },
                  "threshold": {
                    "type": "string",
                    "description": "Pass/fail criteria"
                  }
                }
              },
              "tracesTo": {
                "type": "object",
                "properties": {
                  "requirement": {
                    "type": "string",
                    "pattern": "^REQ-NFR-\\d{3}$"
                  },
                  "performanceBudget": {
                    "type": "string",
                    "pattern": "^ADD-PERF-\\d{3}$"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securityTests": {
      "type": "object",
      "required": ["overview", "tests"],
      "properties": {
        "overview": {
          "type": "string"
        },
        "tests": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "category", "objective"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^TEST-SEC-\\d{3}$"
              },
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string",
                "enum": [
                  "Authentication",
                  "Authorization",
                  "Data Protection",
                  "Input Validation",
                  "API Security",
                  "Scope Validation"
                ]
              },
              "objective": {
                "type": "string"
              },
              "tracesTo": {
                "type": "object",
                "properties": {
                  "requirement": {
                    "type": "string",
                    "pattern": "^REQ-NFR-\\d{3}$"
                  },
                  "securityModel": {
                    "type": "string",
                    "pattern": "^ADD-SEC-\\d{3}$"
                  }
                }
              }
            }
          }
        }
      }
    },
    "testExecutionSchedule": {
      "type": "object",
      "required": ["phases"],
      "properties": {
        "phases": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["phase", "testTypes", "trigger", "frequency"],
            "properties": {
              "phase": {
                "type": "string",
                "enum": ["Development", "Pre-commit", "CI/CD", "Pre-release", "Post-release"]
              },
              "testTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["Unit", "Integration", "E2E", "Performance", "Security"]
                }
              },
              "trigger": {
                "type": "string",
                "description": "What triggers the tests"
              },
              "frequency": {
                "type": "string",
                "description": "How often tests run"
              },
              "environment": {
                "type": "string",
                "enum": ["Local", "Development", "Staging", "Production"]
              }
            }
          }
        }
      }
    },
    "metrics": {
      "type": "object",
      "required": ["coverageTargets", "qualityGates"],
      "properties": {
        "coverageTargets": {
          "type": "object",
          "required": ["overall", "critical"],
          "properties": {
            "overall": {
              "type": "object",
              "required": ["target", "minimum"],
              "properties": {
                "target": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "minimum": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            },
            "critical": {
              "type": "object",
              "required": ["target", "minimum"],
              "properties": {
                "target": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "minimum": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            }
          }
        },
        "qualityGates": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "criteria"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^QG-\\d+$"
              },
              "name": {
                "type": "string"
              },
              "criteria": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["metric", "operator", "threshold"],
                  "properties": {
                    "metric": {
                      "type": "string",
                      "description": "e.g., 'Code Coverage', 'Test Pass Rate'"
                    },
                    "operator": {
                      "type": "string",
                      "enum": [">", ">=", "<", "<=", "="]
                    },
                    "threshold": {
                      "type": ["number", "string"]
                    }
                  }
                }
              },
              "blockDeployment": {
                "type": "boolean",
                "description": "If true, failing this gate blocks deployment"
              }
            }
          }
        },
        "current": {
          "type": "object",
          "properties": {
            "totalTests": {
              "type": "number",
              "minimum": 0
            },
            "passingTests": {
              "type": "number",
              "minimum": 0
            },
            "failingTests": {
              "type": "number",
              "minimum": 0
            },
            "coverage": {
              "type": "object",
              "properties": {
                "lines": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "functions": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "branches": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            }
          }
        }
      }
    },
    "testEnvironments": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "purpose"],
        "properties": {
          "name": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "configuration": {
            "type": "object",
            "properties": {
              "forgeEnvironment": {
                "type": "string",
                "enum": ["development", "staging", "production"]
              },
              "atlassianProduct": {
                "type": "string"
              },
              "testData": {
                "type": "string",
                "description": "Test data setup approach"
              }
            }
          }
        }
      }
    },
    "risks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "description", "impact", "mitigation"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^RISK-TEST-\\d+$"
          },
          "description": {
            "type": "string"
          },
          "impact": {
            "type": "string",
            "enum": ["High", "Medium", "Low"]
          },
          "mitigation": {
            "type": "string"
          }
        }
      }
    }
  }
}
